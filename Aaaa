def init_ui(self):
    """Initialize calculation page UI with separate reference inputs"""
    layout = QHBoxLayout()
    layout.setSpacing(20)
    
    # Left side - Scrollable Input form
    left_frame = QGroupBox("Price Calculation Input")
    left_frame_layout = QVBoxLayout(left_frame)
    
    # Create scroll area for the input form
    self.input_scroll_area = QScrollArea()
    self.input_scroll_area.setWidgetResizable(True)
    self.input_scroll_area.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
    self.input_scroll_area.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
    
    # Create container widget for the form
    input_container = QWidget()
    input_layout = QVBoxLayout(input_container)
    
    form_layout = QGridLayout()
    form_layout.setSpacing(12)
    row = 0

    # Customer Information
    customer_label = QLabel("Customer Information")
    customer_label.setFont(QFont("Arial", 12, QFont.Weight.Bold))
    customer_label.setStyleSheet("color: #0078d4; margin: 10px 0 5px 0;")
    form_layout.addWidget(customer_label, row, 0, 1, 2)
    row += 1

    form_layout.addWidget(QLabel("Customer Name:"), row, 0)
    self.customer_input = QLineEdit()
    self.customer_input.setPlaceholderText("Enter customer name...")
    form_layout.addWidget(self.customer_input, row, 1)
    row += 1

    form_layout.addWidget(QLabel("Job Number:"), row, 0)
    self.job_input = QLineEdit()
    self.job_input.setPlaceholderText("Enter job number...")
    form_layout.addWidget(self.job_input, row, 1)
    row += 1
    
    form_layout.addWidget(QLabel("PCB Part Number:"), row, 0)
    self.pcb_part_input = QLineEdit()
    self.pcb_part_input.setPlaceholderText("Enter PCB part number...")
    form_layout.addWidget(self.pcb_part_input, row, 1)
    row += 1

    # PCB Specifications
    pcb_label = QLabel("PCB Specifications")
    pcb_label.setFont(QFont("Arial", 12, QFont.Weight.Bold))
    pcb_label.setStyleSheet("color: #0078d4; margin: 15px 0 5px 0;")
    form_layout.addWidget(pcb_label, row, 0, 1, 2)
    row += 1

    # Quantity field
    form_layout.addWidget(QLabel("Quantity:"), row, 0)
    self.quantity_input = QLineEdit()
    self.quantity_input.setValidator(QIntValidator(1, 999999))
    self.quantity_input.setPlaceholderText("Enter quantity (e.g. 100)")
    self.quantity_input.setText("1")
    form_layout.addWidget(self.quantity_input, row, 1)
    row += 1

    form_layout.addWidget(QLabel("Unit:"), row, 0)
    self.unit_combo = QComboBox()
    self.unit_combo.addItems(["mm", "inch"])
    form_layout.addWidget(self.unit_combo, row, 1)
    row += 1

    # PCB Size
    form_layout.addWidget(QLabel("PCB Size (L Ã— W):"), row, 0)
    size_widget = QWidget()
    size_layout = QHBoxLayout(size_widget)
    size_layout.setContentsMargins(0, 0, 0, 0)
    
    self.length_input = QLineEdit()
    self.length_input.setValidator(QDoubleValidator(0.1, 9999.0, 2))
    self.length_input.setPlaceholderText("Length")
    
    self.width_input = QLineEdit()
    self.width_input.setValidator(QDoubleValidator(0.1, 9999.0, 2))
    self.width_input.setPlaceholderText("Width")
    
    size_layout.addWidget(QLabel("L:"))
    size_layout.addWidget(self.length_input)
    size_layout.addWidget(QLabel("Ã—"))
    size_layout.addWidget(QLabel("W:"))
    size_layout.addWidget(self.width_input)
    
    form_layout.addWidget(size_widget, row, 1)
    row += 1

    # SEPARATE REFERENCE INPUTS (Not filters)
    reference_label = QLabel("Reference Specifications")
    reference_label.setFont(QFont("Arial", 12, QFont.Weight.Bold))
    reference_label.setStyleSheet("color: #e67e22; margin: 15px 0 5px 0;")
    form_layout.addWidget(reference_label, row, 0, 1, 2)
    row += 1

    # Soldermask as reference input
    form_layout.addWidget(QLabel("Soldermask (Reference):"), row, 0)
    self.soldermask_input = QLineEdit()
    self.soldermask_input.setPlaceholderText("e.g. Green, Blue, Red...")
    form_layout.addWidget(self.soldermask_input, row, 1)
    row += 1

    # Silkscreen as reference input
    form_layout.addWidget(QLabel("Silkscreen (Reference):"), row, 0)
    self.silkscreen_input = QLineEdit()
    self.silkscreen_input.setPlaceholderText("e.g. White, Black, Yellow...")
    form_layout.addWidget(self.silkscreen_input, row, 1)
    row += 1

    # UPDATED FILTER SEQUENCE - REMOVED Soldermask and Silkscreen
    filter_label = QLabel("Price Calculation Filters")
    filter_label.setFont(QFont("Arial", 12, QFont.Weight.Bold))
    filter_label.setStyleSheet("color: #0078d4; margin: 15px 0 5px 0;")
    form_layout.addWidget(filter_label, row, 0, 1, 2)
    row += 1

    self.filter_combos = {}
    self.filter_sequence = [
        ("Layers", "Layers"),
        ("Material", "material"),
        ("Board Thickness", "BoardThickness"),
        ("Cu Inner", "CuInner"),
        ("Cu Outer", "CuOuter"),
        ("Surface Finish", "SurfaceFinish"),
        ("Impedance", "Impedance"),
        ("Back Drill", "back_drill"),
        ("Blind Via", "blind_via"),
        ("Buried Via", "berried_via")
    ]
    
    for display_name, field_name in self.filter_sequence:
        form_layout.addWidget(QLabel(f"{display_name}:"), row, 0)
        combo = QComboBox()
        combo.setMinimumWidth(200)
        combo.addItem("Any")
        
        combo.currentTextChanged.connect(lambda text, field=field_name: self.on_filter_changed(field))
        
        self.filter_combos[field_name] = combo
        form_layout.addWidget(combo, row, 1)
        row += 1

    input_layout.addLayout(form_layout)
    
    # Calculate button
    self.calculate_btn = QPushButton("ðŸ§® Calculate Total Project Price")
    self.calculate_btn.setMinimumHeight(50)
    self.calculate_btn.setFont(QFont("Arial", 14, QFont.Weight.Bold))
    self.calculate_btn.clicked.connect(self.calculate_price)
    input_layout.addWidget(self.calculate_btn)
    
    # Set the container widget to the scroll area
    self.input_scroll_area.setWidget(input_container)
    left_frame_layout.addWidget(self.input_scroll_area)
    
    # Right side - Results
    right_frame = QGroupBox("Calculation Results")
    right_layout = QVBoxLayout(right_frame)

    self.results_table = QTableWidget()
    self.results_table.setColumnCount(2)
    self.results_table.setHorizontalHeaderLabels(['Parameter', 'Value'])
    self.results_table.horizontalHeader().setSectionResizeMode(0, QHeaderView.ResizeMode.ResizeToContents)
    self.results_table.horizontalHeader().setSectionResizeMode(1, QHeaderView.ResizeMode.Stretch)
    self.results_table.verticalHeader().setVisible(False)
    self.results_table.setAlternatingRowColors(True)
    self.results_table.setSelectionBehavior(QTableWidget.SelectionBehavior.SelectRows)
    self.results_table.setEditTriggers(QTableWidget.EditTrigger.NoEditTriggers)
    right_layout.addWidget(self.results_table)

    self.export_btn = QPushButton("ðŸ“Š Export to Excel")
    self.export_btn.setMinimumHeight(45)
    self.export_btn.setFont(QFont("Arial", 12, QFont.Weight.Bold))
    self.export_btn.clicked.connect(self.export_to_excel)
    right_layout.addWidget(self.export_btn)
    
    layout.addWidget(left_frame, 1)
    layout.addWidget(right_frame, 1)
    self.setLayout(layout)
